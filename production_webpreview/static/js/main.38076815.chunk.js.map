{"version":3,"sources":["serviceWorker.js","components/cardLogin.jsx","components/logo.jsx","App.js","languages/pt-br.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","className","this","props","children","React","Component","LogoFull","authTokenObject","loadingBarRef","width","height","viewBox","fill","fillRule","clipRule","d","languagePackage__PT_BR__","homeDOMTitle","stringPassword","stringEmail","stringLongData","stringBadConnection","stringWrongEmail","stringSubmit","languagePackage","cookies","Cookies","UrlAPI","LoadBar","color","onRef","ref","LoginCenterCard","state","email","password","emailChange","bind","passwordChange","handleSubmit","event","setState","target","value","preventDefault","login","onSubmit","htmlFor","onChange","autoComplete","placeholder","id","type","name","required","passwordMessageClass","passwordMessage","LoginPage","Home","Helmet","App","getCookie","get","undefined","authToken","loginMessageSetState","setAuthToken","message","bodyParams","loginMessage","setToken","continuousStart","Axios","post","then","response","data","token","complete","catch","set","path","headers","Authorization","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.38076815.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n\nimport '../styles/login_components.css'\n\n\nclass Card extends React.Component {\n\n  render(){\n    return(\n      <section className='card-container'>\n        {this.props.children}\n      </section>\n    )\n  }\n}\n  \nexport default Card\n","import * as React from \"react\"\n\nfunction LogoFull (props) {\n  return (\n    <svg width={236} height={60} viewBox=\"0 0 236 60\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M122.827 45.782h7.727V19.698h-7.727v2.741h-.077c-.927-1.645-3.246-3.681-7.495-3.681-6.878 0-12.982 5.405-12.982 13.943 0 7.441 4.791 13.943 12.982 13.943 3.013 0 6.181-1.175 7.495-3.682h.077v2.82zm0-13.082c0 2.506-1.623 6.658-6.413 6.658-4.637 0-6.414-4.152-6.414-6.58 0-2.976 1.932-6.736 6.336-6.736 4.328 0 6.491 3.525 6.491 6.658z\"\n        fill=\"#212121\"\n      />\n      <path\n        d=\"M150.181 45.703h-7.727l-8.809-26.084h7.727l4.946 16.293h.077l5.177-16.293h7.727l-9.118 26.084z\"\n        fill=\"#212121\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M179.622 44.215c2.163-1.489 4.018-3.76 5.254-6.659v-.078h-7.881c-1.082 1.332-2.319 2.428-4.714 2.428-3.014 0-5.564-1.801-6.027-4.934h19.318l.015-.11c.072-.504.139-.977.139-1.927 0-7.99-5.795-14.256-13.6-14.256-7.881 0-13.522 6.736-13.522 14.021 0 7.833 6.336 13.865 13.677 13.865 2.627 0 5.177-.784 7.341-2.35zm-7.418-18.879c4.018 0 5.563 2.899 5.872 4.465h-11.745c.386-1.566 1.854-4.465 5.873-4.465z\"\n        fill=\"#212121\"\n      />\n      <path\n        d=\"M197.703 19.619h7.187v2.741h.077c.618-1.253 2.009-3.681 6.414-3.681v7.833c-3.555.078-6.028.861-6.028 4.778v14.335h-7.727V19.619h.077zM226.912 26.982c-.077-.548-.154-1.958-2.395-1.958-1.623 0-2.164 1.018-2.164 1.723 0 1.41 1.932 2.194 3.941 2.82 4.328 1.254 9.041 2.507 9.041 8.147 0 5.483-4.791 8.93-10.509 8.93-3.863 0-9.813-1.802-10.509-8.695h7.65c.309 2.428 2.627 2.428 2.936 2.428 1.314 0 2.705-.783 2.705-2.037 0-2.036-1.932-2.271-6.8-4.151-3.323-1.097-6.105-3.29-6.105-6.815 0-5.17 4.637-8.616 9.969-8.616 3.4 0 9.272 1.331 9.89 8.224h-7.65zM96.245 21.029c-1.39-1.254-4.095-2.272-6.568-2.272-4.559 0-5.563 2.428-6.336 3.681h-.077v-2.741h-7.187V45.78h7.728V29.88c0-1.175.463-2.193 1.236-2.898.077-.079.154-.157.232-.157.077-.078.154-.157.231-.157h.078c.618-.391 1.313-.626 2.086-.626 1.005 0 1.855.391 2.55 1.018.773.705 1.314 1.723 1.314 2.898v15.823h7.727V29.41c0-5.092-1.623-7.207-3.014-8.381zM190.749 45.78c-2.164 0-3.864-1.722-3.864-3.916 0-2.193 1.7-3.916 3.864-3.916 2.164 0 3.864 1.723 3.864 3.916 0 2.115-1.7 3.917-3.864 3.917zM28.85 45.269L28.158 60l12.43-16.19 1.304-12.122 10.204-10.205L60.077 0 38.593 7.903 28.312 18.107l-12.123 1.305L0 31.842l14.732-.691 14.117 14.118z\"\n        fill=\"#212121\"\n      />\n      <path\n        d=\"M15.422 36.137l8.44 8.517-12.507 4.527 4.067-13.044z\"\n        fill=\"#212121\"\n      />\n    </svg>\n  )\n}\n\nexport default LogoFull\n","import React      from 'react'\nimport Axios      from 'axios'\nimport Cookies    from 'universal-cookie'\nimport LoadingBar from 'react-top-loading-bar'\nimport Helmet     from 'react-helmet'\n\n// Components\nimport CardLogin  from './components/cardLogin'\nimport LogoFull   from './components/logo'\n\n// Styles\nimport './styles/login_components.css'\n\n// Languages: String Mapping\nimport languagePackage from './languages/pt-br.js'\n//\nconst homeDOMTitle         = languagePackage.homeDOMTitle\nconst stringEmail          = languagePackage.stringEmail\nconst stringPassword       = languagePackage.stringPassword\nconst stringSubmit         = languagePackage.stringSubmit\nconst stringLongData       = languagePackage.stringLongData\nconst stringBadConnection  = languagePackage.stringBadConnection\nconst stringWrongEmail     = languagePackage.stringWrongEmail\n\n\n// Global Var's\nconst cookies              = new Cookies()\n\nconst UrlAPI               = 'https://navedex-api.herokuapp.com/v1'\nconst pathAPILogin         = '/users/login'\nconst pathAPIListNavers    = '/navers'\n\nlet   authTokenObject\n\nlet loadingBarRef\n\n\n// eslint-disable-next-line\nfunction getJsonPOST (path, paramsObject, token){\n  authTokenObject = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n\n  Axios.post(\n    UrlAPI + path,\n    paramsObject,\n    authTokenObject\n  ).then(\n    function (response) {\n      return response\n    }\n  ).catch(\n    function (data) {\n      return data\n    }\n  )\n}\n\n// eslint-disable-next-line\nfunction getJsonGET (path, token){\n  authTokenObject = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  \n  Axios.get(\n    UrlAPI + path,\n    authTokenObject\n  ).then(\n    function (response) {\n      return response\n    }\n  ).catch(\n    function (data) {\n      return data\n    }\n  )\n}\n\n\nclass LoadBar extends React.Component {\n  render(){\n    return (\n      <LoadingBar\n        height={ 3 }\n        color='#212121'\n        onRef={ ref => (loadingBarRef = ref) }\n      />\n    )\n  }\n}\n\n\nclass LoginCenterCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: ''\n    }\n\n    this.emailChange = this.emailChange.bind(this)\n    this.passwordChange = this.passwordChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  emailChange(event) { \n    this.setState({email: event.target.value})\n  }\n\n  passwordChange(event) {\n    this.setState({password: event.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    this.props.login(this.state.email, this.state.password)\n  }\n\n  render(){\n    return (\n      <div className='flexbox-center-x-y height-100'>\n        <CardLogin>\n          <form onSubmit={ this.handleSubmit }>\n\n            <div className='logo-full-container'>\n              <LogoFull className='logo-full' />\n            </div>\n\n            <div className='card-input-container-m'>\n\n              <label htmlFor='login-email'>\n                { stringEmail }\n              </label>\n              <input\n                value={ this.state.email }\n                onChange={ this.emailChange }\n                autoComplete='email'\n                placeholder={ stringEmail }\n                id='login-email'\n                type='email'\n                name='name'\n              />\n\n            </div>\n            <div className='card-input-container'>\n\n              <label htmlFor='login-password'>\n                { stringPassword }\n              </label>\n              <input\n                value={ this.state.password }\n                onChange={ this.passwordChange }\n                autoComplete='password'\n                placeholder={ stringPassword }\n                id='login-password'\n                type='password'\n                name='name'\n                required\n              />\n\n            </div>\n\n            <div className={ this.props.passwordMessageClass }>\n              <p id='message-login'>{ this.props.passwordMessage }</p>\n            </div>\n\n            <button type=\"submit\">{ stringSubmit }</button>\n\n          </form>\n        </CardLogin>\n      </div>\n    )\n  }\n}\n\n\nclass LoginPage extends React.Component {\n\n  render(){\n    return (\n      <main>\n        <LoginCenterCard\n          passwordMessage={ this.props.passwordMessage }\n          passwordMessageClass={ this.props.passwordMessageClass }\n          login={ this.props.login }\n        />\n      </main>\n    )\n  }\n}\n\n\nclass Home extends React.Component {\n  // constructor(props) {\n  //   super(props)\n  // }\n\n  render(){\n    return (\n      <main>\n        <div>Home - Test string</div>\n        <Helmet>\n          <title>{ homeDOMTitle }</title>\n        </Helmet>\n      </main>\n    )\n  }\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let getCookie = cookies.get('sessionAuth')\n    if (getCookie === undefined){\n      this.state = {\n        passwordMessage: '',\n        authToken: 'undefined',\n        passwordMessageClass: 'no-show'\n      }\n    } else {\n      this.state = {\n        passwordMessage: '',\n        authToken: getCookie,\n        passwordMessageClass: 'no-show'\n      }\n    }\n\n    this.login = this.login.bind(this)\n    this.loginMessageSetState = this.loginMessageSetState.bind(this)\n    this.setAuthToken = this.setAuthToken.bind(this)\n  }\n\n  loginMessageSetState(message){\n    this.setState({\n      passwordMessageClass: 'show',\n      passwordMessage: message\n    })\n  }\n\n  login(email, password){\n    let bodyParams\n    let loginMessage = this.loginMessageSetState\n    let setToken = this.setAuthToken\n\n    if(email !== ''){\n      loadingBarRef.continuousStart()\n\n      bodyParams = {\n        email: email,\n        password: password\n      }\n\n      Axios.post(\n        UrlAPI + pathAPILogin,\n        bodyParams\n      ).then(\n        function (response) {\n          setToken(response.data.token)\n          loadingBarRef.complete()\n        }\n      ).catch(\n        function (data) {\n          setToken(undefined)\n          if(data.response){\n            loginMessage(stringLongData)\n          } else {\n            loginMessage(stringBadConnection)\n          }\n          loadingBarRef.complete()\n        }\n      )\n    } else {\n      loadingBarRef.complete()\n      loginMessage(stringWrongEmail)\n    }\n  }\n\n  setAuthToken(token){\n    cookies.set('sessionAuth', token)\n    this.setState({\n      authToken: token\n    })\n  }\n\n\n  render(){\n\n    if(this.state.authToken !== 'undefined'){\n      getJsonGET(pathAPIListNavers, this.state.authToken)\n      return (\n        <Home />\n      )\n\n    } else {\n      return (\n        <LoginPage\n          passwordMessage={ this.state.passwordMessage }\n          passwordMessageClass={ this.state.passwordMessageClass }\n          login={ this.login }\n        />\n      )\n    }\n  }\n}\n\n\nexport default {App, LoadBar}\n","// Portuguese - Brazil\n\n\nconst languagePackage__PT_BR__ = {\n    homeDOMTitle:          'Navedex - Home',\n    stringPassword:        'Senha',\n    stringEmail:           'E-mail',\n    stringLongData:        'Dados incorretos.',\n    stringBadConnection:   'Oops! Verifique sua conexão.',\n    stringWrongEmail:      'Email inválido.',\n    stringSubmit:          'Entrar'\n}\n\n\nexport default languagePackage__PT_BR__\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport './styles/index.css'\n\nimport AppComponents from './App'\n\n\nReactDOM.render(\n  <AppComponents.LoadBar />,\n  document.getElementById('load-bar')\n)\n\nReactDOM.render(\n  <AppComponents.App />,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}